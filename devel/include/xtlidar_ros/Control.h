// Generated by gencpp from file xtlidar_ros/Control.msg
// DO NOT EDIT!


#ifndef XTLIDAR_ROS_MESSAGE_CONTROL_H
#define XTLIDAR_ROS_MESSAGE_CONTROL_H

#include <ros/service_traits.h>


#include <xtlidar_ros/ControlRequest.h>
#include <xtlidar_ros/ControlResponse.h>


namespace xtlidar_ros
{

struct Control
{

typedef ControlRequest Request;
typedef ControlResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Control
} // namespace xtlidar_ros


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::xtlidar_ros::Control > {
  static const char* value()
  {
    return "6a92c772b35d41f76733d8eb9779b0e1";
  }

  static const char* value(const ::xtlidar_ros::Control&) { return value(); }
};

template<>
struct DataType< ::xtlidar_ros::Control > {
  static const char* value()
  {
    return "xtlidar_ros/Control";
  }

  static const char* value(const ::xtlidar_ros::Control&) { return value(); }
};


// service_traits::MD5Sum< ::xtlidar_ros::ControlRequest> should match
// service_traits::MD5Sum< ::xtlidar_ros::Control >
template<>
struct MD5Sum< ::xtlidar_ros::ControlRequest>
{
  static const char* value()
  {
    return MD5Sum< ::xtlidar_ros::Control >::value();
  }
  static const char* value(const ::xtlidar_ros::ControlRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::xtlidar_ros::ControlRequest> should match
// service_traits::DataType< ::xtlidar_ros::Control >
template<>
struct DataType< ::xtlidar_ros::ControlRequest>
{
  static const char* value()
  {
    return DataType< ::xtlidar_ros::Control >::value();
  }
  static const char* value(const ::xtlidar_ros::ControlRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::xtlidar_ros::ControlResponse> should match
// service_traits::MD5Sum< ::xtlidar_ros::Control >
template<>
struct MD5Sum< ::xtlidar_ros::ControlResponse>
{
  static const char* value()
  {
    return MD5Sum< ::xtlidar_ros::Control >::value();
  }
  static const char* value(const ::xtlidar_ros::ControlResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::xtlidar_ros::ControlResponse> should match
// service_traits::DataType< ::xtlidar_ros::Control >
template<>
struct DataType< ::xtlidar_ros::ControlResponse>
{
  static const char* value()
  {
    return DataType< ::xtlidar_ros::Control >::value();
  }
  static const char* value(const ::xtlidar_ros::ControlResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // XTLIDAR_ROS_MESSAGE_CONTROL_H
